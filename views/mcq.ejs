<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MCQ Helper</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <style>
      body {
        background: url('https://images.unsplash.com/photo-1485470733090-0aae1788d5af?q=80&w=1834&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D')
          no-repeat center center / cover;
        color: #fff;
        font-family: Arial, sans-serif;
        margin: 0;
        height: 100vh;
      }
      header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 20px;
        background: rgba(0, 0, 0, 0.7);
        position: fixed;
        width: 100%;
        top: 0;
        z-index: 10;
      }
      header h1 {
        color: white;
      }
      header nav button {
        background: transparent;
        color: white;
        border: none;
        font-size: 16px;
        cursor: pointer;
      }
      .container {
        margin-top: 100px;
        padding: 20px;
        background: rgba(0, 0, 0, 0.7);
        border-radius: 10px;
        color: white;
      }
      textarea {
        width: 100%;
        height: 150px;
        background: #282c34;
        color: #61dafb;
        border: 1px solid #444;
        padding: 10px;
        font-family: 'Courier New', Courier, monospace;
        font-size: 16px;
        border-radius: 5px;
      }
      .output-area {
        margin-top: 20px;
        padding: 10px;
        background: #282c34;
        color: #61dafb;
        border-radius: 5px;
        min-height: 100px;
        white-space: pre-wrap;
        font-family: 'Courier New', Courier, monospace;
        font-size: 16px;
      }
      footer {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background: rgba(0, 0, 0, 0.7);
        text-align: center;
        padding: 10px 0;
      }
      footer p {
        margin: 0;
        font-size: 14px;
      }
    </style>
  </head>
  <body>
    <header>
      <h1>Edu-Assist Hub</h1>
      <nav>
        <a href="/"><button>Logout</button></a> <!-- Adjusted to match code.ejs -->
      </nav>
    </header>

    <div class="container">
      <h1>MCQ Helper</h1>
      <p>Type your topic below and generate multiple-choice questions (MCQs).</p>
      
      <textarea id="mcq-input" placeholder="Type your topic here..."></textarea>
      <div class="button-group mt-3">
        <button class="btn btn-success" onclick="submitMCQs()">Submit</button> <!-- Renamed to match code.ejs -->
        <button class="btn btn-info" onclick="downloadMCQs()">Download</button>
        <button class="btn btn-warning" id="save-btn" disabled onclick="saveMCQs()">Save</button>
      </div>
      <div id="mcq-output" class="output-area mt-3">Output will be displayed here...</div> <!-- Updated initial text -->
    </div>

    <footer>
      <p>Â© 2025 Edu-Assist Hub. All rights reserved.</p>
    </footer>

    <script>
      async function submitMCQs() { // Renamed from generateMCQs to match submitCode
        const topic = document.getElementById('mcq-input').value;
        if (!topic.trim()) {
          alert('Please type a topic before submitting.');
          return;
        }
        try {
          const response = await fetch('/generate-mcq', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ topic }), // Matches backend req.body.topic
          });
          const data = await response.json();
          document.getElementById('mcq-output').textContent = data.mcqOutput || 'No output received.';
          
          // Enable the Save button after output is generated
          document.getElementById('save-btn').disabled = false;
        } catch (error) {
          console.error('Error:', error);
          document.getElementById('mcq-output').textContent = 'An error occurred.';
        }
      }

      async function saveMCQs() {
        const topic = document.getElementById('mcq-input').value; // Renamed variable for consistency
        const output = document.getElementById('mcq-output').textContent;

        try {
          const response = await fetch('/save-code', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              page: 'mcq', // Matches your history schema
              inputCode: topic, // Matches code.ejs and DB schema
              outputCode: output // Matches code.ejs and DB schema
            }),
          });
          const data = await response.json();
          if (data.success) {
            alert('MCQs saved successfully.');
          } else {
            alert('Failed to save MCQs: ' + data.message);
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while saving the MCQs.');
        }
      }

      function downloadMCQs() {
        const topic = document.getElementById('mcq-input').value;
        const output = document.getElementById('mcq-output').textContent;
        const blob = new Blob([`Topic:\n${topic}\n\nOutput:\n${output}`], { type: 'text/plain' }); // Matches code.ejs format
        const a = document.createElement('a');
        a.href = URL.createObjectURL(blob);
        a.download = 'mcqs.txt';
        a.click();
      }
    </script>
  </body>
</html>