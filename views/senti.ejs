<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Text Sentiment Analysis</title>
  <link
    rel="stylesheet"
    href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
  />
  <style>
    body {
      background: url('https://images.unsplash.com/photo-1485470733090-0aae1788d5af?q=80&w=1834&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D')
        no-repeat center center / cover;
      color: #fff;
      font-family: Arial, sans-serif;
      margin: 0;
      height: 100vh;
    }
    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px 20px;
      background: rgba(0, 0, 0, 0.7);
      position: fixed;
      width: 100%;
      top: 0;
      z-index: 10;
    }
    header h1 {
      color: white;
    }
    header nav button {
      background: transparent;
      color: white;
      border: none;
      font-size: 16px;
      cursor: pointer;
    }
    .container {
      margin-top: 100px;
      padding: 20px;
      background: rgba(0, 0, 0, 0.7);
      border-radius: 10px;
      color: white;
    }
    textarea {
      width: 100%;
      height: 150px;
      background: #282c34;
      color: #61dafb;
      border: 1px solid #444;
      padding: 10px;
      font-family: 'Courier New', Courier, monospace;
      font-size: 16px;
      border-radius: 5px;
    }
    .output-area {
      margin-top: 20px;
      padding: 10px;
      background: #282c34;
      color: #61dafb;
      border-radius: 5px;
      min-height: 100px;
      white-space: pre-wrap;
      font-family: 'Courier New', Courier, monospace;
      font-size: 16px;
    }
    footer {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      background: rgba(0, 0, 0, 0.7);
      text-align: center;
      padding: 10px 0;
    }
    footer p {
      margin: 0;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <header>
    <h1>Edu-Assist Hub</h1>
    <nav>
      <a href="http://localhost:3000/"><button>Logout</button></a>
    </nav>
  </header>

  <div class="container">
    <h1>Text Sentiment Analysis</h1>
    <p>Paste your text below to analyze its sentiment.</p>
    <textarea id="text-input" placeholder="Paste your text here..."></textarea>
    <div class="button-group mt-3">
      <button class="btn btn-success" onclick="analyzeSentiment()">Analyze Sentiment</button>
      <button class="btn btn-info" onclick="downloadSentiment()">Download</button>
      <button class="btn btn-warning" id="save-btn" disabled onclick="saveSentiment()">Save</button>
    </div>
    <div id="sentiment-output" class="output-area mt-3">Sentiment analysis results will be displayed here...</div>
  </div>

  <footer>
    <p>Â© 2025 Edu-Assist Hub. All rights reserved.</p>
  </footer>

  <script>
    async function analyzeSentiment() {
      const text = document.getElementById("text-input").value;
      if (!text.trim()) {
        alert("Please paste some text before analyzing sentiment.");
        return;
      }
      try {
        const response = await fetch("/analyze-sentiment", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ text }),
        });
        const data = await response.json();
        const output = `
          Sentiment Classification: ${data.sentimentOutput.sentimentLabel}
          Sentiment Percentage: ${data.sentimentOutput.sentimentPercentage}%
          Sentiment Score: ${data.sentimentOutput.score}
          Comparative Score: ${data.sentimentOutput.comparative}
          Tokens: ${data.sentimentOutput.tokens.join(', ')}
          Positive Words: ${data.sentimentOutput.positive.join(', ')}
          Negative Words: ${data.sentimentOutput.negative.join(', ')}
        `;
        document.getElementById("sentiment-output").textContent = output;
        
        // Enable the Save button after analysis
        document.getElementById("save-btn").disabled = false;
      } catch (error) {
        console.error("Error:", error);
        document.getElementById("sentiment-output").textContent = "An error occurred while analyzing sentiment.";
      }
    }

    async function saveSentiment() {
      const input = document.getElementById("text-input").value;
      const output = document.getElementById("sentiment-output").textContent;

      try {
        const response = await fetch("/save-code", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            page: "senti",
            input,
            output
          }),
        });
        const data = await response.json();
        if (data.success) {
          alert("Sentiment analysis saved successfully.");
        } else {
          alert("Failed to save sentiment analysis: " + data.message);
        }
      } catch (error) {
        console.error("Error:", error);
        alert("An error occurred while saving the sentiment analysis.");
      }
    }

    function downloadSentiment() {
      const text = document.getElementById("text-input").value;
      const output = document.getElementById("sentiment-output").textContent;
      if (!output || output === "Sentiment analysis results will be displayed here..." || output === "An error occurred while analyzing sentiment.") {
        alert("No sentiment analysis to download. Please analyze sentiment first.");
        return;
      }
      const blob = new Blob(
        [`Input Text:\n${text}\n\nSentiment Analysis Results:\n${output}`],
        { type: "text/plain" }
      );
      const a = document.createElement("a");
      a.href = URL.createObjectURL(blob);
      a.download = "sentiment_analysis.txt";
      a.click();
    }
  </script>
</body>
</html>